// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Proton.Register.Infrastructure.Context;

namespace Proton.Register.Infrastructure.Migrations
{
    [DbContext(typeof(RegisterDataContext))]
    [Migration("20210626030407_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Proton.Register.Domain.Models.AdminSetting", b =>
                {
                    b.Property<int?>("IdAdminSetting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idadminsetting")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AcronymCurrency")
                        .HasColumnType("text")
                        .HasColumnName("acronymcurrency");

                    b.Property<int?>("CurrencyIdCurrency")
                        .HasColumnType("integer")
                        .HasColumnName("idcurrency");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("bytea")
                        .HasColumnName("logo");

                    b.Property<string>("PrimaryColor")
                        .HasColumnType("text")
                        .HasColumnName("primarycolor");

                    b.Property<string>("SecondaryColor")
                        .HasColumnType("text")
                        .HasColumnName("secondarycolor");

                    b.HasKey("IdAdminSetting")
                        .HasName("pk_adminsetting");

                    b.ToTable("adminsetting");
                });

            modelBuilder.Entity("Proton.Register.Domain.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("cityid");

                    b.Property<bool>("ActiveCity")
                        .HasColumnType("bool")
                        .HasColumnName("activecity");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createddate");

                    b.Property<string>("IbgeCodeCity")
                        .HasColumnType("varchar(14)")
                        .HasColumnName("ibgecodecity");

                    b.Property<string>("IntrraCodeCity")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("intrracodecity");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<string>("NameCity")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("namecity");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updateddate");

                    b.HasKey("Id")
                        .HasName("pk_city");

                    b.ToTable("city");
                });

            modelBuilder.Entity("Proton.Register.Domain.Models.Terminal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("terminalid");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address");

                    b.Property<string>("CNPJ")
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cnpj");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid")
                        .HasColumnName("cityid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createddate");

                    b.Property<string>("District")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("district");

                    b.Property<string>("GeneralObservation")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("generalobservation");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("isdeleted");

                    b.Property<string>("NIF")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nif");

                    b.Property<string>("NameTerminal")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nameterminal");

                    b.Property<string>("SpecificInstruction")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("specificinstruction");

                    b.Property<string>("StateRegistry")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("stateregistry");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updateddate");

                    b.HasKey("Id")
                        .HasName("pk_terminal");

                    b.HasIndex("CityId")
                        .HasDatabaseName("ix_terminal_cityid");

                    b.ToTable("terminal");
                });

            modelBuilder.Entity("Proton.Register.Domain.Models.Terminal", b =>
                {
                    b.HasOne("Proton.Register.Domain.Models.City", "City")
                        .WithMany("Terminals")
                        .HasForeignKey("CityId")
                        .HasConstraintName("fk_terminal_city_cityid")
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Proton.Register.Domain.Models.City", b =>
                {
                    b.Navigation("Terminals");
                });
#pragma warning restore 612, 618
        }
    }
}
